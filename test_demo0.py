# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestDemo0():
    def setup_method(self, method):
        print("hello world")
        self.driver = webdriver.Chrome()
        self.vars = {}


    def teardown_method(self, method):
        self.driver.quit()


    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_xxx(self):
        self.driver.get("https://cn.bing.com/")
        self.vars["root"] = self.driver.current_window_handle
        self.vars["window_handles"] = self.driver.window_handles
        #[object Object]
        self.vars["win9038"] = self.wait_for_window(2000)
        self.driver.find_element(By.ID, "sb_form_q").click()
        self.driver.find_element(By.ID, "sb_form_q").send_keys("selenium")
        self.driver.find_element(By.ID, "sb_form_q").send_keys(Keys.ENTER)
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.switch_to.window(self.vars["win9038"])
        self.vars["win7741"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win7741"])
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.execute_script("window.scrollTo(0,1.3333333730697632)")
        self.vars["win7146"] = self.wait_for_window(2000)
        self.driver.execute_script("window.scrollTo(0,1100)")
        self.driver.find_element(By.LINK_TEXT, "Selenium Python 教程 - 知乎").click()

class TestDome0_copy:
    def test_demo1(self):
        assert 11 == 11

    def test_demo(self):
        assert 22 == 21

def main():
    # pytest.main(['./test_demo0.py', '-v', '-s'])
    #pytest.main(['./test_demo0.py', '-v', '-s'])
    pytest.main(['./test_demo0.py::TestDemo0'])

if __name__ == '__main__':
    print("----------- main entry ------------- ")
    main()